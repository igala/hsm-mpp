<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="sample.BasicStateMachineTest" tests="16" skipped="0" failures="0" errors="0" timestamp="2019-12-10T14:18:08" hostname="Igals-MacBook-Pro.local" time="0.152">
  <properties/>
  <testcase name="enumTest" classname="sample.BasicStateMachineTest" time="0.004"/>
  <testcase name="eventsWithPayloadCauseStateTransition" classname="sample.BasicStateMachineTest" time="0.123"/>
  <testcase name="noMatchingStateAvailable" classname="sample.BasicStateMachineTest" time="0.001"/>
  <testcase name="initialStateIsEntered" classname="sample.BasicStateMachineTest" time="0.0"/>
  <testcase name="canGetPathString" classname="sample.BasicStateMachineTest" time="0.001"/>
  <testcase name="eventsWithoutPayloadCauseStateTransition" classname="sample.BasicStateMachineTest" time="0.001"/>
  <testcase name="canChainMethods" classname="sample.BasicStateMachineTest" time="0.0"/>
  <testcase name="emittedEventTestHandledFromTopStateMachine" classname="sample.BasicStateMachineTest" time="0.002"/>
  <testcase name="actionsAreCalledOnTransitionsWithPayload" classname="sample.BasicStateMachineTest" time="0.0"/>
  <testcase name="impossibleTransitionTest" classname="sample.BasicStateMachineTest" time="0.0"/>
  <testcase name="getAllActiveStates" classname="sample.BasicStateMachineTest" time="0.003"/>
  <testcase name="currentStateIsExited" classname="sample.BasicStateMachineTest" time="0.001"/>
  <testcase name="actionsCanBeInternal" classname="sample.BasicStateMachineTest" time="0.001"/>
  <testcase name="actionsAreCalledAlwaysWithValidPayload" classname="sample.BasicStateMachineTest" time="0.001"/>
  <testcase name="cannotCreateEmptyStateMachine" classname="sample.BasicStateMachineTest" time="0.001"/>
  <testcase name="actionsAreCalledBetweenExitAndEnter" classname="sample.BasicStateMachineTest" time="0.006"/>
  <system-out><![CDATA[ init[] on - enter[] on - handle Event: toggle execute handler for event: toggle[] on - exit[] off - enter init[] on - enter[] on - handle Event: toggle execute handler for event: toggle init[] on - enter init[] on - enter[] on - handle Event: toggle execute handler for event: toggle[] on - exit[] off - enter init[] c - enter[] b - enter[] a - enter[] a1 - enter[] b - handle Event: T1 execute handler for event: T1 init[] on - enter[] on - handle Event: toggle execute handler for event: toggle[] on - exit[] off - enter init[] on - enter[] on - handle Event: toggle execute handler for event: toggle init[] a - enter[] a1 - enter[] a11 - enter[] a22 - enter init[] on - enter teardown[] on - exit init[] on - enter[] on - handle Event: toggle execute handler for event: toggle init[] on - enter[] on - handle Event: toggle execute handler for event: toggle[] on - exit[] off - enter init[] a - enter[] aa - enter[] aa - handle Event: T execute handler for event: T teardown[] aa - exit[] a - exit[] b - enter[] bb - enter]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
